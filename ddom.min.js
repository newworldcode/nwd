!function(t){"use strict";function n(t,n){return this.results=[],this.scope=n||document,this.results=e(t,"string")?[].slice.call(this.scope.querySelectorAll(t)):[t],this}function e(t,n){var e=(typeof t).toLowerCase();return n?e===n:e}function r(t,r,i){t=t||window.event;var s=t.target||t.srcElement;return e(r,"string")?(new n(r,s.parentNode).each(function(){this===s&&i.call(this,t)}),this):i(t)}var i=n.prototype;Object.defineProperty(i,"length",{__proto__:null,enumerable:!0,get:function(){return this.results.length}}),i.get=function(t){return this.results[t||0]},i.on=function(t,n,i,s){var o=this.results;return s=!e(s,"boolean")&&e(i,"boolean")?i:s,t.split(" ").forEach(function(t){o.forEach(function(o){o.addEventListener(t,function(t){e(n,"function")?n.call(t.target,t):r(t,n,i)},s)})}.bind(this)),this},i.off=function(t,n,e){return e=e||!1,t.split(" ").forEach(function(t){this.results.forEach(function(r){r.removeEventListener(t,n,e)})}.bind(this)),this},i.parent=function(){return this.results.length>0?new n(this.results[0].parentNode):null},i.each=function(t){return this.results.forEach(function(n){t.apply(n,arguments)}),this},t.$=function(t,e){return new n(t,e)}}(window);
//# sourceMappingURL=data:application/json;base64,
